<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<mvc:annotation-driven />
	<!-- 启用注解驱动的定时任务 -->
	<task:annotation-driven scheduler="myScheduler" />
	<!-- 推荐配置线程池 -->
	<task:scheduler id="myScheduler" pool-size="5"></task:scheduler>
	<!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="net.itw.wcms">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 1.配置数据源 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		lazy-init="true" destroy-method="close">
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="minPoolSize" value="5" />
		<property name="acquireIncrement" value="2" />
		<property name="maxPoolSize" value="200" />
		<property name="maxIdleTime" value="600" />
		<property name="maxStatements" value="100" />
		<property name="testConnectionOnCheckin" value="false" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="preferredTestQuery" value="SELECT 1" />
		<property name="idleConnectionTestPeriod" value="60" />
	</bean>
	 
     <!-- 配置来源数据 -->
    <bean id="dataSource2" parent="dataSource_Abstract">
        <property name="url" value="${jdbc.jdbcUrl}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driverClass}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
    </bean>
	 
   <bean id="dataSource_Abstract" class="com.alibaba.druid.pool.DruidDataSource"
           destroy-method="close"  abstract="true" init-method="init" >
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="2" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="10" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="5" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="30000" />
        <!-- <property name="poolPreparedStatements" value="true" /> -->
        <!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>
    
	<bean id="onStartupServlet" class="net.itw.wcms.toolkit.OnStartupServlet"
		lazy-init="false" init-method="init" destroy-method="dispose" />
		
	<bean id="dataSyncHelper" class="net.itw.wcms.toolkit.DataSyncHelper">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="dataSyncStepA" class="net.itw.wcms.toolkit.DataSyncStepA">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="dataSyncStepB" class="net.itw.wcms.toolkit.DataSyncStepB">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="dataSyncStepC" class="net.itw.wcms.toolkit.DataSyncStepC">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="autoCreateDBTable" class="net.itw.wcms.toolkit.AutoCreateDBTable">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 2.配置JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="packagesToScan" value="net.itw.wcms"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- 3.配置事物管理 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 4.配置支持注解事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 5.配置 SpringData -->
	<jpa:repositories base-package="net.itw.wcms"
		entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>

</beans>
