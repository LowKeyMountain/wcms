<?xml version="1.0" encoding="UTF-8"?>
<sqlMap>
	<sqls>
		<entry>
			<key>01</key>
			<description>将船舶任务子表数据同步到临时表</description>
			<value>
			<![CDATA[
 			 INSERT INTO tab_temp_b (id, Time, Cmsid, PushTime, OneTask, direction, unloaderMove, operationType, offset, groupId)
 			 SELECT id, Time, Cmsid, PushTime, OneTask, direction, unloaderMove, operationType, offset, ? from %s
			]]>
			</value>
		</entry>
		<entry>
			<key>02</key>
			<description>【任务子表】删除任务子表：卸船作业信息</description>
			<value>
			<![CDATA[
 			DELETE FROM %s
			]]>
			</value>
		</entry>
		<entry>
			<key>03</key>
			<description>【任务子表】删除任务子表：组信息</description>
			<value>
			<![CDATA[
			DELETE FROM %s
			]]>
			</value>
		</entry>
		<entry>
			<key>04</key>
			<description>重新同步任务子表数据</description>
			<value>
			<![CDATA[
			SELECT *
			FROM tab_unloader_all b
			WHERE (b.operationType = 0
					OR b.operationType = 1)
				AND b.Time >= (
					SELECT t.begin_time
					FROM tab_task t
					WHERE t.id = ?
				)
				AND b.Time <= (
					SELECT CASE 
							WHEN t.end_time IS NULL THEN CURRENT_TIMESTAMP()
							ELSE t.end_time
						END
					FROM tab_task t
					WHERE t.id = ?
				)
				AND b.unloaderMove >= (
					SELECT t.minPosition
					FROM (
						SELECT task_id
							, CASE 
								WHEN MIN(start_position) - MIN(end_position) < 0 THEN MIN(start_position)
								WHEN MIN(end_position) - MIN(start_position) < 0 THEN MIN(end_position)
							END AS 'minPosition'
						FROM v_cabin_info
						WHERE task_id = ?
						GROUP BY task_id
						HAVING minPosition IS NOT NULL
					) t
				)
				AND b.unloaderMove <= (
					SELECT t.maxPosition
					FROM (
						SELECT task_id
							, CASE 
								WHEN MAX(start_position) - MAX(end_position) < 0 THEN MAX(end_position)
								WHEN MAX(end_position) - MAX(start_position) < 0 THEN MAX(start_position)
							END AS 'maxPosition'
						FROM v_cabin_info
						WHERE task_id = ?
						GROUP BY task_id
						HAVING maxPosition IS NOT NULL
					) t
				)
			ORDER BY b.Time ASC
			]]>
			</value>
		</entry>
		<entry>
			<key>04_backup_201802112205</key>
			<description>重新同步任务子表数据</description>
			<value>
			<![CDATA[
				SELECT *
				FROM tab_unloader_all b
				WHERE (b.operationType = 0
						OR b.operationType = 1)
					AND b.Time >= (
						SELECT t.begin_time
						FROM tab_task t
						WHERE t.id = ?
					)
					AND b.Time <= (
						SELECT CASE 
								WHEN t.end_time IS NULL THEN CURRENT_TIMESTAMP()
								ELSE t.end_time
							END
						FROM tab_task t
						WHERE t.id = ?
					)
				ORDER BY b.Time ASC
			]]>
			</value>
		</entry>
		<entry>
			<key>05</key>
			<description>【任务子表】将临时表作业数据插入子表</description>
			<value>
			<![CDATA[
 			 INSERT INTO tab_temp_b_%s (id, Time, Cmsid, PushTime, OneTask, direction, unloaderMove, operationType, offset, groupId)
 			 SELECT id, Time, Cmsid, PushTime, OneTask, direction, unloaderMove, operationType, 0, ? from tab_unloader_all 
 			 where id = ? and cmsid = ? 
			]]>
			</value>
		</entry>
		<entry>
			<key>06</key>
			<description>查询卸船机作业数据任务ID、船舱ID</description>
			<value>
			<![CDATA[
			 SELECT cabin.id, t.task_id AS 'taskId' FROM tab_cabin cabin LEFT JOIN ( SELECT c.*, task.`offset`, 
			 task.`status`, task.begin_time, CASE WHEN task.end_time IS NULL THEN CURRENT_TIMESTAMP () ELSE task.end_time 
			 END AS 'end_time' FROM tab_cargo c LEFT JOIN tab_task task ON c.task_id = task.id ) t ON cabin.cargo_id = 
			 t.id WHERE cabin.start_position <= ? AND cabin.end_position >= ? AND t.begin_time <= ? AND 
			 t.end_time >= ? 
			]]>
			</value>
		</entry>
		<entry>
			<key>07</key>
			<description>查询卸船机数据所属的作业任务</description>
			<value>
			<![CDATA[
			SELECT task_id AS taskId, begin_time AS 'beginTime'
				, CASE 
					WHEN end_time IS NULL THEN CURRENT_TIMESTAMP()
					ELSE end_time
				END AS 'endTime'
				, CASE 
					WHEN MIN(start_position) - MIN(end_position) < 0 THEN MIN(start_position)
					WHEN MIN(end_position) - MIN(start_position) < 0 THEN MIN(end_position)
				END AS 'minPosition'
				, CASE 
					WHEN MAX(start_position) - MAX(end_position) < 0 THEN MAX(end_position)
					WHEN MAX(end_position) - MAX(start_position) < 0 THEN MAX(start_position)
				END AS 'maxPosition'
			FROM v_cabin_info
			GROUP BY task_id, begin_time, end_time
			HAVING minPosition <= ?
			AND maxPosition >= ?
			AND beginTime <= ?
			AND endTime >= ? 
			]]>
			</value>
		</entry>
	</sqls>
</sqlMap>